{
  "stats": {
    "suites": 7,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-18T17:36:46.775Z",
    "end": "2025-06-18T17:36:49.099Z",
    "duration": 2324,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b86dcf63-ea51-476f-a459-7e47f956419c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8e2488c3-ea39-44cb-bdf6-38289e79d280",
          "title": "Feature Reqres",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\delete.js",
          "file": "\\tests\\delete.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "DELETE Reqres",
              "fullTitle": "Feature Reqres DELETE Reqres",
              "timedOut": false,
              "duration": 884,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"DELETE\", \n    headers: {\n        \"x-api-key\": \"reqres-free-v1\",\n        \"Content-Type\": \"application/json\",\n    },\n});\n//cek respons status\nconsole.log(\"Response Status:\", response.status);\nassert.strictEqual(response.status, 204, \"204\");\n\n//cek bodytext kosong\nconst responseBodyText = await response.text();\nassert.strictEqual(responseBodyText, \"\", \"\");\n//cek text kosong\nconst responseText = await response.text();\nassert.strictEqual(responseText.length, 0, \"()\");\n//cek header kososng\nconst contentTypeHeader = response.headers.get(\"content-type\");\nassert.strictEqual(contentTypeHeader, null, \"\");",
              "err": {},
              "uuid": "374174d4-dcfb-430e-963f-773e2d62ea7f",
              "parentUUID": "8e2488c3-ea39-44cb-bdf6-38289e79d280",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "374174d4-dcfb-430e-963f-773e2d62ea7f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 884,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3ba38e2f-c2a8-42d4-afcb-3d92a8a64b06",
          "title": "Feature Reqres",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\get.js",
          "file": "\\tests\\get.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET Reqres",
              "fullTitle": "Feature Reqres GET Reqres",
              "timedOut": false,
              "duration": 57,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users?page=2\", {\n    method: \"GET\",\n    headers: {\n       \"x-api-key\": \"reqres-free-v1\",\n       \"Content-Type\": \"application/json\",\n    },\n})\n    \n//menyimpan response\nconst data = await response.json();\nconsole.log(data);\n//cek code respone yang dihasilkan harus 200\nassert.strictEqual(response.status, 200);\n//kita punya data pada hal 2 tapi kita cek di halaman 3\nassert.strictEqual(data.page, 2);\n//Cek data array ke 1 dengan id = 7\nassert.strictEqual(data.data[0].id, 7);\n//cek data email array ke 1 dengan nama michael\nassert.strictEqual(data.data[0].email, \"michael.lawson@reqres.in\");",
              "err": {},
              "uuid": "b845d612-975b-4799-a5b9-94f101d57afc",
              "parentUUID": "3ba38e2f-c2a8-42d4-afcb-3d92a8a64b06",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b845d612-975b-4799-a5b9-94f101d57afc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 57,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f1eb82a-5ad9-4a94-9133-34a354cfe8af",
          "title": "Feature Reqres",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\patch.js",
          "file": "\\tests\\patch.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PATCH Reqres",
              "fullTitle": "Feature Reqres PATCH Reqres",
              "timedOut": false,
              "duration": 403,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"PATCH\",\n    headers: {\n       \"x-api-key\": \"reqres-free-v1\",\n       \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"morpheus\",\n        job: \"zion resident\",\n    }),\n});\nconst data = await response.json();\nconsole.log(data);\n//cek code respone yang dihasilkan harus 200\nassert.strictEqual(response.status, 200);\n//cek nama\nassert.strictEqual(data.name, \"morpheus\");\n    \n//cek job\nassert.strictEqual(data.job, \"zion resident\");",
              "err": {},
              "uuid": "1cfb299e-6d74-4c70-977e-d6bd8a33aeb5",
              "parentUUID": "5f1eb82a-5ad9-4a94-9133-34a354cfe8af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1cfb299e-6d74-4c70-977e-d6bd8a33aeb5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 403,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c064389-9344-4076-9fb0-fece9a193e35",
          "title": "Feature Reqres",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\post.js",
          "file": "\\tests\\post.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "POST Reqres",
              "fullTitle": "Feature Reqres POST Reqres",
              "timedOut": false,
              "duration": 426,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users\", {\n    method: \"POST\",\n    headers: {\n       \"x-api-key\": \"reqres-free-v1\",\n       \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"shinta\",\n        job: \"leader\",\n    }),\n});\nconst data = await response.json();\nconsole.log(data);\n//bawaan\nassert.strictEqual(response.status, 201);\n//cek nama\nassert.strictEqual(data.name, \"shinta\");\n            \n//cek job\nassert.strictEqual(data.job, \"leader\");",
              "err": {},
              "uuid": "8b9988b6-465c-4678-9359-07e9e3bb7fb2",
              "parentUUID": "9c064389-9344-4076-9fb0-fece9a193e35",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b9988b6-465c-4678-9359-07e9e3bb7fb2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 426,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1d66a28b-7ea5-473a-abe1-f50c0ccb28d8",
          "title": "Feature Reqres",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\put.js",
          "file": "\\tests\\put.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "PUT Reqres",
              "fullTitle": "Feature Reqres PUT Reqres",
              "timedOut": false,
              "duration": 417,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await fetch(\"https://reqres.in/api/users/2\", {\n    method: \"PUT\",\n    headers: {\n       \"x-api-key\": \"reqres-free-v1\",\n       \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n        name: \"morpheus\",\n        job: \"zion resident\",\n    }),\n});\nconst data = await response.json();\nconsole.log(data);\n//bawaan\nassert.strictEqual(response.status, 200);\n//cek nama\nassert.strictEqual(data.name, \"morpheus\");\n            \n//cek job\nassert.strictEqual(data.job, \"zion resident\");",
              "err": {},
              "uuid": "923db951-b412-4fdb-98da-6e761e95d8c8",
              "parentUUID": "1d66a28b-7ea5-473a-abe1-f50c0ccb28d8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "923db951-b412-4fdb-98da-6e761e95d8c8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 417,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9c4ec421-e98d-445e-af67-693207ccfaab",
          "title": "Validasi JSON Schema",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\validate.js",
          "file": "\\tests\\validate.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate response against schema",
              "fullTitle": "Validasi JSON Schema should validate response against schema",
              "timedOut": false,
              "duration": 76,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responseData = {\n    name: \"Gajah Lucu\",\n    age: 60,\n    isActive: true,\n    };\nconst schema = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Generated schema for Root\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": { \n            \"type\": \"string\" \n        },\n        \"age\": { \n            \"type\": \"number\" \n        },\n        \"isActive\": { \n            \"type\": \"boolean\" \n        }\n        ,\n    },\n\"required\": [\n    \"name\", \n    \"age\", \n    \"isActive\",\n    ],\n    };\n    const validate = ajv.compile(schema);\n    const isValid = validate(responseData);\n\n    // Cetak error jika tidak valid\n    if (!isValid) {\nconsole.error(\"Schema validation errors:\", validate.errors);\n    }\n expect(isValid, JSON.stringify(validate.errors, null, 2)).to.be.true;",
              "err": {},
              "uuid": "8b1d20df-2679-4679-9281-ed0d1a77e65b",
              "parentUUID": "9c4ec421-e98d-445e-af67-693207ccfaab",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8b1d20df-2679-4679-9281-ed0d1a77e65b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 76,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "1484393f-a294-478a-9470-508f46266f3a",
          "title": "Validasi JSON Schema",
          "fullFile": "C:\\Users\\henun\\Sesi7_Hendra\\tests\\validate1.js",
          "file": "\\tests\\validate1.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should validate response against schema",
              "fullTitle": "Validasi JSON Schema should validate response against schema",
              "timedOut": false,
              "duration": 37,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const responseData = {\nid: 2,\nemail: \"janet.weaver@reqres.in\",\nfirst_name: \"Janet\",\nlast_name: \"Weaver\",\n};\nconst schema = {\n    \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n    \"title\": \"Generated schema for Root\",\n    \"type\": \"object\",\n    \"properties\": \n    {\n        \"id\": { \n            \"type\": \"number\" \n        },\n        \"email\": { \n            \"type\": \"string\" \n        },\n        \"first_name\": { \n            \"type\": \"string\" \n        },\n        \"last_name\": {\n            \"type\": \"string\"\n        }\n    },\n    \"required\": [\n    \"id\", \n    \"email\", \n    \"first_name\",\n    \"last_name\",\n    ],\n    };\n\n    const validate = ajv.compile(schema);\n    const isValid = validate(responseData);\n\n    // Cetak error jika tidak valid\n    if (!isValid) {\nconsole.error(\"Schema validation errors:\", validate.errors);\n    }\n expect(isValid, JSON.stringify(validate.errors, null, 2)).to.be.true;",
              "err": {},
              "uuid": "1d7f4ba4-25e0-47f4-a539-33cbb443818c",
              "parentUUID": "1484393f-a294-478a-9470-508f46266f3a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1d7f4ba4-25e0-47f4-a539-33cbb443818c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 37,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "11.6.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}